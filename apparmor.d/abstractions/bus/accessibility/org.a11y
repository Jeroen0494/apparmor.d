# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2017 Canonical Ltd
# Copyright (C) 2023-2024 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

  abi <abi/4.0>,

  # Allow the accessibility services in the user session to send us any events

  dbus receive bus=accessibility
       peer=(label="@{p_at_spi2_registryd}"),

  # Allow querying for capabilities and registering

  dbus send bus=accessibility path=/org/a11y/atspi/accessible/root
       interface=org.a11y.atspi.Socket
       member=Embed
       peer=(name=org.a11y.atspi.Registry, label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/registry
       interface=org.a11y.atspi.Registry
       member=GetRegisteredEvents
       peer=(name=org.a11y.atspi.Registry, label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/registry/deviceeventcontroller
       interface=org.a11y.atspi.DeviceEventController
       member={GetKeystrokeListeners,GetDeviceEventListeners}
       peer=(name=org.a11y.atspi.Registry, label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/registry/deviceeventcontroller
       interface=org.a11y.atspi.DeviceEventController
       member=NotifyListenersSync
       peer=(name=org.a11y.atspi.Registry, label="@{p_at_spi2_registryd}"),

  # org.a11y.atspi is not designed for application isolation and these rules
  # can be used to send change events for other processes.

  dbus send bus=accessibility path=/org/a11y/atspi/accessible/root
       interface=org.a11y.atspi.Event.Object
       member=ChildrenChanged
       peer=(name=org.freedesktop.DBus, label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/accessible/root
       interface=org.a11y.atspi.Accessible
       member=Get*
       peer=(label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/accessible/@{int}
       interface=org.a11y.atspi.Event.Object
       member={ChildrenChanged,PropertyChange,StateChanged,TextCaretMoved}
       peer=(name=org.freedesktop.DBus, label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/accessible/@{int}
       interface=org.freedesktop.DBus.Properties
       member={Get,GetAll}
       peer=(label="@{p_at_spi2_registryd}"),

  dbus send bus=accessibility path=/org/a11y/atspi/cache
       interface=org.a11y.atspi.Cache
       member={AddAccessible,RemoveAccessible}
       peer=(name=org.freedesktop.DBus, label="@{p_at_spi2_registryd}"),

  include if exists <abstractions/bus/accessibility/org.a11y.d>

# vim:syntax=apparmor
